using System;

class Program
{
    static ref string find(string s, string[] ls)
    {
        for (int i = 0; i < ls.Length; i++)
            if (ls[i] == s)
                return ref ls[i];
        return ref ls[0];
    }

    static void Main(string[] args)
    {
        string[] msg = { "Apple", "Mango", "Guava" };
        Console.Write("Enter a fruit name to search:");
        string search = Console.ReadLine();
        ref string fruit = ref find(search, msg);
        Console.Write("Enter a fruit name to replace:");
        string replace = Console.ReadLine();
        if (fruit == search) fruit = replace;
        Console.WriteLine("OUTPUT:");
        Console.WriteLine(string.Join(" ", msg));
        Console.ReadLine();
    }
}




class Food
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }

    class Foods
    {
        public string foodTile { get; set; }

        public List<Food> listOfFoods { get; set; }

        public Foods(string tile, List<Food> foods)
        {
            foodTile = tile;
            listOfFoods = foods;
        }

        public override string ToString()
        {
            string result = $"Title: {foodTile}\nList of foods:\n";

            foreach (var food in listOfFoods)
            {
                result += $"Food: {food.Id} - {food.Name}\n";
            }

            return result;
        }
    }
    
    static void Main(string[] args)
    {
        List<Food> fl = new List<Food>();
        int numberFoods;
        Console.Write("Enter the number of foods:");
        numberFoods = int.Parse(Console.ReadLine());
        for (int i = 0; i < numberFoods; i++)
        {
            Food food = new Food();
            Console.Write("Enter ID:");
            food.Id = int.Parse(Console.ReadLine());
            Console.Write("Enter name:");
            food.Name = Console.ReadLine();
            fl.Add(food);
        }
        Foods foods = new Foods("Fruit", fl);

        Console.WriteLine("OUTPUT:");
        Console.Write(foods);

        Console.ReadLine();
    }




interface IUtility
    {
        float GetFloat(string msg, float min, float max);

        string GetString(string msg, string pattern);
    }

    class Utility : IUtility
    {
        public float GetFloat(string msg, float min, float max)
        {
            while (true)
            {
                Console.Write(msg);
                var input = Console.ReadLine();

                if (float.TryParse(input, out float result) && result <= max && result >= min)
                {
                    return result;
                }
            }
        }

        public string GetString(string msg, string pattern)
        {
            while (true)
            {
                Console.Write(msg);
                var input = Console.ReadLine();

                if (Regex.IsMatch(input, pattern))
                {
                    return input;
                }
            }
        }
    }

    class Student
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public float Marks { get; set; }

        public override string ToString()
        {
            return $"{Id}-{Name}-{Marks}";
        }
    }

    static void Main(string[] args)
    {
        Student s = new Student();
        Utility utility = new Utility();
        s.Id = utility.GetString("Enter ID (HE123456):", @"^[H][E]\d{6}$");
        s.Name = utility.GetString("Enter name (not empty):", @"\S+");
        s.Marks = utility.GetFloat("Enter marks (from 0 to 10):", 0, 10);

        Console.WriteLine("OUTPUT:");
        Console.WriteLine(s);
        Console.ReadKey();
    }